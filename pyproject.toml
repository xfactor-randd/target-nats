[tool.poetry]
name = "target-nats"
version = "0.0.1"
description = "Singer target for nats, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Jonathan Steele <jonathan.steele@xfactor.io>"]
keywords = [
    "ELT",
    "nats",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = ">=3.8"
singer-sdk = { version="~=0.40.0" }
fs-s3fs = { version = "~=1.1.1", optional = true }
nats-py = { version = "~=2.9.0" }
requests = "~=2.32.3"

[tool.poetry.dev-dependencies]
pytest = ">=8"
singer-sdk = { version="~=0.40.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.pytest.ini_options]
addopts = '--durations=10'

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true

[tool.ruff]
src = ["target_nats"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["target_nats"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core==1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
target-nats = 'target_nats.target:main'
